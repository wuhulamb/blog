<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2025-06-29T22:24:06+08:00</updated><id>/blog/feed.xml</id><title type="html">wuhulamb’s blog</title><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><entry><title type="html">安卓调试工具（adb）学习</title><link href="/blog/p/adb-tools/" rel="alternate" type="text/html" title="安卓调试工具（adb）学习" /><published>2025-06-27T17:00:00+08:00</published><updated>2025-06-27T17:00:00+08:00</updated><id>/blog/p/adb-tools</id><content type="html" xml:base="/blog/p/adb-tools/"><![CDATA[<p>ADB（Android Debug Bridge）是 Android SDK 中一个功能强大的命令行工具，用于与连接的 Android 设备（真机或模拟器）进行通信.</p>

<p>可以在<a href="https://developer.android.com/tools/releases/platform-tools" target="_blank">这里</a>下载（需要科学上网）</p>

<h2 id="安卓手机启用-usb-调试">安卓手机启用 USB 调试</h2>

<p>在设备的<strong>设置</strong>中：</p>

<ol>
  <li>进入<strong>关于手机</strong>（或类似选项），连续点击<strong>版本号</strong>7次，直到看到“您现在是开发者！”的提示</li>
  <li>返回设置主菜单，进入<strong>系统设置</strong>，找到新出现的<strong>开发者选项</strong>，在开发者选项中，启用 USB 调试</li>
</ol>

<h2 id="常用命令">常用命令</h2>

<p>查看连接的安卓设备（安卓手机需启用 USB 调试）</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb devices
</code></pre></div></div>

<p>在设备上启动一个交互式的命令行 Shell （ <code class="language-plaintext highlighter-rouge">ls</code> , <code class="language-plaintext highlighter-rouge">cd</code> , <code class="language-plaintext highlighter-rouge">rm</code> , <code class="language-plaintext highlighter-rouge">rmdir</code> 均可以使用）</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb shell
</code></pre></div></div>

<p>在设备的 Shell 中执行单条命令 <command />，并将结果返回到电脑的命令行</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb shell <span class="nb">rm</span> <span class="nt">-r</span> /sdcard/Download/
</code></pre></div></div>

<p>将设备 Camera 目录复制到电脑目录下（包括 Camera 目录本身）</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb pull /sdcard/DCIM/Camera /home/user/Pictures/
</code></pre></div></div>

<p>将电脑上的文件或目录复制到设备</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb push myfile.txt /sdcard/Download/
</code></pre></div></div>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="计算机" /><summary type="html"><![CDATA[ADB（Android Debug Bridge）是 Android SDK 中一个功能强大的命令行工具，用于与连接的 Android 设备（真机或模拟器）进行通信.]]></summary></entry><entry><title type="html">大学生福利（ CARSI 和 OSCA ）</title><link href="/blog/p/carsi-and-osca/" rel="alternate" type="text/html" title="大学生福利（ CARSI 和 OSCA ）" /><published>2025-06-06T21:10:00+08:00</published><updated>2025-06-06T21:10:00+08:00</updated><id>/blog/p/carsi-and-osca</id><content type="html" xml:base="/blog/p/carsi-and-osca/"><![CDATA[<p>刷qq群偶然发现了<a href="https://www.carsi.edu.cn/index.html" target="_blank">教育网联邦认证与资源共享基础设施CARSI</a>网站，里面有很多资源，登录学校账号可以看到学校购买的资源，还有一些免费可使用的资源。经过一番寻找，发现了<a href="https://ocloud.ihep.ac.cn/" target="_blank">OSCA联盟云存储</a>网站.</p>

<p>OSCA 是一个提供云存储服务的联盟，可以简单理解为网盘，但是相比普通网盘有很多优势：</p>

<ul>
  <li>提供开放接口，可编程（所以也可以使用s3客户端）</li>
  <li>容量大（大学生有1T空间）</li>
  <li>速度快（至少比某些网盘快得多）</li>
</ul>

<p>下面简单介绍命令行使用方法.</p>

<h2 id="awscli">awscli</h2>

<p>笔者目前选择了轻量的awscli，安装方法推荐下载最新.zip包解压安装，参考<a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/getting-started-install.html" target="_blank">amazon官网</a>.</p>

<h2 id="配置">配置</h2>

<p>然后使用 <code class="language-plaintext highlighter-rouge">aws configure</code> 命令进行配置，AWS Access Key ID 和 AWS Secret Access Key 最重要，填写osca网站给的AK和SK，Default region name 是AWS自己服务的服务器区域，可不填，Default output format 可填json.</p>

<p>然后编辑config文件，加入 <code class="language-plaintext highlighter-rouge">endpoint_url = https://fgws3-ocloud.ihep.ac.cn</code></p>

<p>然后使用 <code class="language-plaintext highlighter-rouge">aws configure set default.s3.signature_version s3v4</code> 命令配置签名，保证数据加密安全</p>

<h2 id="使用">使用</h2>

<p>查看osca的bucket</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">ls</span>
</code></pre></div></div>

<p>查看osca的bucket的文件和目录</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">ls </span>s3://bucket-name/
</code></pre></div></div>

<p>将本地文件移动到bucket</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">mv </span>local.txt s3://bucket-name/
</code></pre></div></div>

<p>将本地文件夹递归移动到bucket</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">mv</span> /local/dir/ s3://bucket-name/ <span class="nt">--recursive</span>
</code></pre></div></div>

<p>将本地文件夹 <strong>/local/dir/内的文件</strong> 同步到bucket的dir中，并排除子文件夹和单个文件</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws s3 <span class="nb">sync</span> /local/dir/ s3://bucket-name/dir/ <span class="nt">--exclude</span> <span class="s2">"/local/dir/subdir/*"</span> <span class="nt">--exclude</span> <span class="s2">"/local/dir/file"</span>
</code></pre></div></div>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="others" /><summary type="html"><![CDATA[刷qq群偶然发现了教育网联邦认证与资源共享基础设施CARSI网站，里面有很多资源，登录学校账号可以看到学校购买的资源，还有一些免费可使用的资源。经过一番寻找，发现了OSCA联盟云存储网站.]]></summary></entry><entry><title type="html">本科毕业论文</title><link href="/blog/p/undergraduate-thesis/" rel="alternate" type="text/html" title="本科毕业论文" /><published>2025-06-02T10:20:00+08:00</published><updated>2025-06-02T10:20:00+08:00</updated><id>/blog/p/undergraduate-thesis</id><content type="html" xml:base="/blog/p/undergraduate-thesis/"><![CDATA[<h1 style="text-align: center; margin-bottom: 30px;"><strong>基于POI数据的兰州市生活性服务业空间格局研究</strong></h1>

<p><strong>摘　要：</strong>生活性服务业是服务业经济中的重要组成部分，合理布局空间位置可以加快城市经济发展、提高人们生活水平。本文基于兰州市六类生活性服务业POI数据，运用核密度分析、熵指数、数值统计等方法研究兰州市生活性服务业的空间格局特征，结果发现：1）兰州市生活性服务业呈现“中心——外围”结构特征，中心多与区县政府所在地空间邻近；2）将兰州市行政区依据生活性服务业的密度和种类排名，最高为城关区，其次是七里河区、安宁区、西固区，最后是红古区、榆中县、皋兰县、永登县；3）高附加值的服务相对集中在兰州市中心城区，低附加值的服务则相对分散。<br /><strong>关键词：</strong>生活性服务业；空间格局；POI；兰州市</p>

<h2 id="引言">引　言</h2>

<p>生活性服务业与人们的日常生活息息相关，合理布局生活性服务业的空间位置可以提升生活设施的利用效率，进一步提高人们的生活水平[1]。随着我国经济高速发展，城镇化率快速升高，居民收入水平不断提高，人们对城市生活性服务业的需求快速上升[5]。然而整体来看，我国生活性服务业发展仍相对滞后，如何优化生活性服务业的空间格局以提高空间效率正成为政府和学术界关注的焦点。</p>

<p>随着科学技术的不断发展，地理信息系统的建设越来越完善，使用POI数据进行相关研究逐渐成为新的趋势[2]。POI数据具有信息量大、准确度高、容易获取等诸多优点，因而适用于各种尺度、范围的空间研究[1,3,5]。使用POI数据进行生活性服务业空间格局的研究不在少数，如冉钊等基于POI数据研究了长沙市的生活性服务业空间格局[1]，王娜等则研究了深圳市的生活性服务业空间格局及影响因素[4]，张家旗等研究了郑州市中心城区的生活性服务业空间分布特征[5]。总体而言，使用POI数据对城市一类要素的空间格局研究十分普遍，相关研究方法也较为成熟。</p>

<p>本文的研究对象为兰州市，兰州市受地形影响较大，主要城区城镇均位于河谷之中，生活性服务业的布局与其他非河谷城市差别较大。本文通过研究兰州市的生活性服务业空间格局，尝试探索其布局内在规律，为未来城市规划的科学决策贡献力量。</p>

<h2 id="1-理论基础与研究综述">1 理论基础与研究综述</h2>

<h3 id="11-理论基础">1.1 理论基础</h3>

<p>对城市生活性服务业的研究最早可追溯到克里斯泰勒在20世纪30年代提出的中心地理论。该理论内容包括，城市存在中心地，中心地是为周边区域提供商品和服务的聚集，中心地因提供商品和服务的能力存在不同等级差异；商品和服务也存在等级差异，低级商品的需求频率高，服务范围小，高级商品的需求频率低，服务范围大；三种空间组织原则：市场原则（K=3），交通原则（K=4），行政原则（K=7）[6]。</p>

<p>在克里斯泰勒的中心地理论基础上，相关理论不断发展完善。其中，廖什的市场区位论强调经济因素对区位选择的影响[7]；伯吉斯的同心圆模型创建了城市结构研究的经典模型[8]；佩鲁的增长极理论引入了增长极概念，解释了集聚效应和扩散效应[9]；弗里德曼的核心-边缘理论研究了核心区和边缘区的关系，从而解释了区域发展不平衡的现象[10]；乌尔曼等多位学者共同提出的空间相互作用理论主要研究不同区域之间的人口、商品、信息的流动规律[11]；以克鲁格曼为代表的学者提出的新经济地理学强调规模经济、运输成本和集聚效应对区域发展的影响，为全球化背景下的区域发展提供了新的理论框架[12]。本文主要依赖克里斯泰勒的中心地理论，试图探究兰州市的生活性服务业空间分布规律，并尝试找到其背后的影响因素。</p>

<h3 id="12-研究综述">1.2 研究综述</h3>

<p>国外学者对城市生活性服务业研究起步较早，研究主要集中于空间布局和影响因素。上个世纪90年代，Coffey对加拿大蒙特利尔大都市区高阶服务活动在城市内部的分布模式及其影响因素进行了研究[13]；21世纪初，Prayag通过GIS技术分析了汉密尔顿市餐饮业位置的演变，研究了餐厅聚集的模式及其可能的驱动因素[14]；Hans探讨了荷兰的购物街商铺集聚的经济机制[15]。</p>

<p>国内学者对城市生活性服务业也进行了多样化的探索。研究初期，宁越敏、吴郁文等学者对上海、广州的商业布局、等级结构、形成原因进行了探讨[16,17]；杨吾扬对北京零售商业与服务业网点形成的历史背景、空间结构及未来的中心进行了研究[18]。随着互联网技术的迅速发展，使用兴趣点（Points of Interest）数据、网站点评数据、社交媒体数据进行的相关研究越来越多。浩飞龙运用POI数据对长春市商业服务空间分布特征、等级结构，以及各行业的分布规律进行了研究[19]；李卫东基于POI数据对南京市空间格局和商业空间要素布局分别进行了研究[20]。同时，城市居民日益增长的美好生活需要也推动了学者们对餐饮住宿、休闲娱乐、养老等服务业的研究[21-23]。研究数据从早期的调研普查到互联网大数据，研究方法从几何空间的定量分析向包含文本分析的定量定性相结合过渡，研究内容也更关注消费者的心理、情感。</p>

<p>综合来看，已有研究在分析生活性服务业的空间布局时，研究方法以核密度分析为主，且多以行政区划为统计单元。本研究额外使用熵指数方法和主导生活性服务业分析方法，尝试从新的角度对生活性服务业分布的空间规律进行解释，并且以划分的格网为统计单元，更细致地刻画生活性服务业的分布情况。</p>

<h2 id="2-研究区概况数据来源与研究方法">2 研究区概况、数据来源与研究方法</h2>

<h3 id="21-研究区概况">2.1 研究区概况</h3>

<p>兰州市位于中国西北部，甘肃省中部，地处中国陆域版图几何中心，是西部地区重要中心城市、工业基地、综合交通枢纽和丝绸之路经济带的核心节点城市。截至2023年[24]，全市地区生产总值3487.3亿元，常住人口442.51万人，城镇人口375.45万人，城镇化率达到了84.85%。兰州市地域总面积1.31万平方公里，全市地貌主要为山地、高原、平川、河谷、沙漠、戈壁六大类，城镇乡村大多集中在平川、河谷地带。</p>

<p>兰州市于2019年确立“一心两翼”的城市发展战略格局，以兰州市中心城区四区（城关区、七里河区、安宁区、西固区）为“核心”，兰州新区和榆中县为“两翼”，推动人居向东、产业向北转移。兰州市中心城区是兰州市人口经济高度集中的区域，历史悠久，发展充分；兰州新区是2012年设立的国家级新区，为未来的重点发展对象；榆中县于2019年确立建设榆中生态文化创新城，明确了建设成为“西部创新新平台、甘肃新兴增长极、兰州城市副中心”的总体定位。兰州市城市发展战略在延续历史发展路径的基础上，新确立兰州新区和榆中生态文化创新城发展区域，对城市的生活性服务业布局产生了重要影响。</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx2.sinaimg.cn/large/008kbRJbly1i20ux0cj8bj31lg1lgqb4.jpg" alt="undergraduate-thesis-lanzhou-administration.jpg" />
<figcaption>图1 兰州市行政区划边界<br />Fig.1 Administrative division boundaries of Lanzhou</figcaption>
</figure>

<h3 id="22-数据来源">2.2 数据来源</h3>

<p>在《生活性服务业统计分类（2019）》的基础上，结合研究内容和数据的可获得性，以日常生活最常使用的服务为主要依据，将兰州市的生活性服务业分为以下六类。</p>

<figure>
<figcaption>表1 兰州市POI数据的生活性服务业分类表<br />Tab.1 Classification table of consumer services industry of POI data in Lanzhou</figcaption>
</figure>

<table>
  <thead>
    <tr>
      <th style="text-align: center">ID</th>
      <th style="text-align: center">大类</th>
      <th style="text-align: center">子类</th>
      <th style="text-align: center">数量/个</th>
      <th style="text-align: center">比例/%</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">餐饮服务</td>
      <td style="text-align: center">中餐厅、西餐厅、快餐、咖啡店、甜品店等</td>
      <td style="text-align: center">24625</td>
      <td style="text-align: center">25.90</td>
    </tr>
    <tr>
      <td style="text-align: center">2</td>
      <td style="text-align: center">购物服务</td>
      <td style="text-align: center">商场、便利店、服装鞋帽、家用电器等</td>
      <td style="text-align: center">40219</td>
      <td style="text-align: center">42.30</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">生活服务</td>
      <td style="text-align: center">物流快递、邮局、事务所、旅行社等</td>
      <td style="text-align: center">19497</td>
      <td style="text-align: center">20.50</td>
    </tr>
    <tr>
      <td style="text-align: center">4</td>
      <td style="text-align: center">金融保险服务</td>
      <td style="text-align: center">银行、保险公司、证券公司、财务公司等</td>
      <td style="text-align: center">2429</td>
      <td style="text-align: center">2.55</td>
    </tr>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">商务住宅服务</td>
      <td style="text-align: center">写字楼、别墅、产业园区、住宅小区等</td>
      <td style="text-align: center">4412</td>
      <td style="text-align: center">4.64</td>
    </tr>
    <tr>
      <td style="text-align: center">6</td>
      <td style="text-align: center">住宿服务</td>
      <td style="text-align: center">宾馆、酒店、招待所等</td>
      <td style="text-align: center">3905</td>
      <td style="text-align: center">4.11</td>
    </tr>
    <tr>
      <td style="text-align: center">总计</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: center">95087</td>
      <td style="text-align: center">100.00</td>
    </tr>
  </tbody>
</table>

<p style="font-size: 16px; color: grey;">数据来源：高德地图</p>

<p>随着电子地图的快速发展，POI数据的覆盖度也不断提高，使用POI数据进行的科学研究也日益广泛。POI数据是一种具有位置和相关属性（名称、类别等）的点数据，可以用来反映研究区域服务的空间分布情况。本文针对前面的六个生活性服务业分类，使用Python分别爬取高德地图对应POI数据。最后共爬取95087条数据，爬取时间为2023年10月。</p>

<p>本文的研究区域为兰州市市域，研究基本单元为兰州市行政区划和划分格网。划分格网参考已有文献资料[1]，根据研究区面积、POI数量，以1000m×1000m的正方形方格，将兰州市划分为13692个基本单元。本文将大尺度行政区划统计分析的优势和小尺度格网分析的优势结合起来，更加深入地研究兰州市生活性服务业空间布局。</p>

<h3 id="23-研究方法">2.3 研究方法</h3>

<h4 id="231-核密度分析">2.3.1 核密度分析</h4>

<p>核密度分析法是一种度量空间要素分布密度的方法。该方法以空间某位置为中心，计算一定带宽范围内的所有空间要素的核函数值，再进行求和，得到该位置的核密度。本文通过使用ArcGIS的核密度分析工具，遍历空间所有栅格，分别计算每个栅格的核密度，得到整个空间的核密度概况。</p>

\[f(x, y) = \frac{1}{nh^2} \sum_{i=1}^{n} K\left(\frac{d_i}{h}\right)\]

<p>其中，$h$为设置的带宽，$n$为距中心$(x,y)$距离小于带宽$h$的空间要素个数，$d_i$为空间要素到中心$(x,y)$的距离，$K$为核函数。</p>

<h4 id="232-poi熵指数">2.3.2 POI熵指数</h4>

<p>借鉴香农在信息论中提出的熵指数概念，定义如下的POI熵指数，用来衡量生活性服务业的功能多样性[1]。POI熵指数的值越大，表示该区域的生活性服务业功能多样性越丰富。</p>

\[H_i = -\sum_{k} P_{ik} \ln(P_{ik})\]

<p>其中，$i$为某个区域，$k$表示某个生活性服务业，$P_{ik}$由下面两式计算得到。$T_{ik} = \frac{N_{ik}}{N_{k}}$，$P_{ik} = \frac{T_{ik}}{\sum_{i} T_{ik}}$。$N_{ik}$为格网$i$内生活性服务业$k$的POI个数，$N_k$为该服务业全部POI个数。得到$T_{ik}$后，再对区域$i$的不同服务业$T_{ik}$进行归一即得到$P_{ik}$。</p>

<h4 id="233-数值统计">2.3.3 数值统计</h4>

<p>统计符合条件的生活性服务业POI个数，再除以对应条件下的总和，可以得到符合条件的生活性服务业的数值统计结果。</p>

\[C_{ik} = \frac{N_{ik}}{\sum_{i} N_{ik}}\]

<p>其中，$k$表示生活性服务业，$N_{ik}$表示符合条件$i$的$k$生活性服务业POI个数，$C_{ik}$表示符合条件$i$的$k$生活性服务业比例。</p>

<h2 id="3-兰州市生活性服务业空间格局">3 兰州市生活性服务业空间格局</h2>

<p>按照兰州市行政区，对生活性服务业POI数量进行统计，并计算网点密度和人均网点数，得到表2。从兰州市生活性服务业网点密度来看，城关区生活性服务业分布最密集，网点密度达到了186.28个/km2，永登县分布最稀疏，网点密度只有0.82个/km2，两者相差227倍。从生活性服务业人均网点数看，皋兰县最高人均网点数为825.46个/万人，城关区人均网点数为257.29个/万人，西固区人均网点数为174.40个/万人。皋兰县的人均网点数实际存在虚高问题。主要原因是兰州市统计局在进行人口统计时，将兰州新区（主要位于皋兰县）和各行政区并行统计，导致皋兰县和永登县的人口统计数据偏低。所以，最终导致皋兰县的人均网点数高达825.46个/万人。总体来看，城关区生活性服务业的网点密度和人均网点数都相对较高，其次是七里河区、安宁区、西固区，最后是红古区，榆中县、皋兰县、永登县。</p>

<figure>
<figcaption>表2 2023年兰州市各行政区生活性服务业密度概况<br />Tab.2 Density of consumer services industry in administrative districts of Lanzhou in 2023</figcaption>
</figure>

<table>
  <thead>
    <tr>
      <th style="text-align: center">行政区</th>
      <th style="text-align: center">POI数量/个</th>
      <th style="text-align: center">面积/km2</th>
      <th style="text-align: center">常住人口/万人</th>
      <th style="text-align: center">网点密度/(个/km2)</th>
      <th style="text-align: center">人均网点数/(个/万人)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">城关区</td>
      <td style="text-align: center">38714</td>
      <td style="text-align: center">207.83</td>
      <td style="text-align: center">150.47</td>
      <td style="text-align: center">186.28</td>
      <td style="text-align: center">257.29</td>
    </tr>
    <tr>
      <td style="text-align: center">七里河区</td>
      <td style="text-align: center">15042</td>
      <td style="text-align: center">397.49</td>
      <td style="text-align: center">72.35</td>
      <td style="text-align: center">37.84</td>
      <td style="text-align: center">207.91</td>
    </tr>
    <tr>
      <td style="text-align: center">安宁区</td>
      <td style="text-align: center">8701</td>
      <td style="text-align: center">441.74</td>
      <td style="text-align: center">47.44</td>
      <td style="text-align: center">19.70</td>
      <td style="text-align: center">183.41</td>
    </tr>
    <tr>
      <td style="text-align: center">西固区</td>
      <td style="text-align: center">7215</td>
      <td style="text-align: center">385.30</td>
      <td style="text-align: center">41.37</td>
      <td style="text-align: center">18.73</td>
      <td style="text-align: center">174.40</td>
    </tr>
    <tr>
      <td style="text-align: center">红古区</td>
      <td style="text-align: center">3321</td>
      <td style="text-align: center">567.66</td>
      <td style="text-align: center">14.07</td>
      <td style="text-align: center">5.85</td>
      <td style="text-align: center">236.03</td>
    </tr>
    <tr>
      <td style="text-align: center">榆中县</td>
      <td style="text-align: center">9474</td>
      <td style="text-align: center">3301.64</td>
      <td style="text-align: center">47.13</td>
      <td style="text-align: center">2.87</td>
      <td style="text-align: center">201.02</td>
    </tr>
    <tr>
      <td style="text-align: center">皋兰县</td>
      <td style="text-align: center">7619</td>
      <td style="text-align: center">1680.53</td>
      <td style="text-align: center">9.23</td>
      <td style="text-align: center">4.53</td>
      <td style="text-align: center">825.46</td>
    </tr>
    <tr>
      <td style="text-align: center">永登县</td>
      <td style="text-align: center">5001</td>
      <td style="text-align: center">6090.00</td>
      <td style="text-align: center">26.52</td>
      <td style="text-align: center">0.82</td>
      <td style="text-align: center">188.57</td>
    </tr>
    <tr>
      <td style="text-align: center">总计</td>
      <td style="text-align: center">95087</td>
      <td style="text-align: center">13072.19</td>
      <td style="text-align: center">408.58</td>
      <td style="text-align: center">7.27</td>
      <td style="text-align: center">232.73</td>
    </tr>
  </tbody>
</table>

<p style="font-size: 16px; color: grey;">数据来源：兰州市统计年鉴及高德地图</p>

<h3 id="31-生活性服务业核密度分布">3.1 生活性服务业核密度分布</h3>

<p>使用ArcGIS的核密度分析工具对兰州市六类生活性服务业POI进行分析，将结果拉伸后，再分级展示，得到图2兰州市生活性服务业核密度分析结果。生活性服务业核密度最高的地方集中在兰州市中心城区，位于城关区、七里河区、安宁区、西固区这四区的河谷地带。红古区生活性服务业核密度最高的地方位于其区政府所在地，永登县核密度最高的地方同样位于其县政府所在地。皋兰县核密度较高的地方主要有两块，一块是县政府所在地，一块是正在建设的兰州新区。榆中县核密度最高的地方为县政府所在地，其次是和平镇政府、定远镇大名城和夏官营镇两所高校所在地。</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx2.sinaimg.cn/large/008kbRJbly1i20ux0mzh1j31lg1lg48i.jpg" alt="undergraduate-thesis-lanzhou-kernel-density.jpg" />
<figcaption>图2 兰州市生活性服务业核密度分析<br />Fig.2 Kernel density analysis of consumer services industry in Lanzhou</figcaption>
</figure>

<p>兰州市中心城区生活性服务业在空间上呈现明显的“中心——外围”结构特征，组成中心城区的四个区也各自呈现“中心——外围”结构特征。研究可发现，城关区以张掖路商业街为主核心，以王府井商圈、雁滩万达广场附近为次核心；七里河区以敦煌路——兰州中心为核心；安宁区以安宁西路为核心；西固区以西固城商业步行街为核心。四区从核心向外围的生活性服务业核密度值逐层递减，在空间上符合克里斯泰勒的中心地理论。</p>

<h3 id="32-生活性服务业功能多样性">3.2 生活性服务业功能多样性</h3>

<p>根据公式（2）测算每个单元格的生活性服务业熵指数，并基于ArcGIS自然断裂点法将兰州市生活性服务业功能多样性分为七类，得到图3兰州市生活性服务业功能多样性分析结果。整个兰州市生活性服务业功能多样性的高值多集中在中心城区，而城关区的生活性服务业功能多样性高值在中心城区四个区中又是占比最多的（图4）。生活性服务业功能多样性高值相对较多的片区为兰州新区和各区县政府所在地。图3中还存在生活性服务业功能多样性有值单元格的线状分布和少数零星分布情况。</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx4.sinaimg.cn/large/008kbRJbly1i20ux166hbj323g1wxwxj.jpg" alt="undergraduate-thesis-lanzhou-functional-diversity.jpg" />
<figcaption>图3 兰州市生活性服务业功能多样性分析<br />Fig.3 Functional diversity analysis of consumer services industry in Lanzhou</figcaption>
</figure>

<p>统计每个行政区包含的不同生活性服务业功能多样性级别的单元格数占该行政区包含的所有单元格数比例，得到图4生活性服务业功能多样性分区分级图。城关区最高级别的功能多样性占比为15.19%，远高于其他行政区。七里河区、安宁区、西固区最高级别的功能多样性占比分别为3.77%、4.85%和3.51%。红古区、榆中县、皋兰县、永登县最高级别的功能多样性占比均不超过1.23%，从高到低前三个级别功能多样性占比加和分别为3.66%、2.04%、2.39%、0.62%。依据生活性服务业功能多样性级别占比，可对八个行政区进行排序。第一梯队为城关区，第二梯队包括七里河区、安宁区、西固区，第三梯队包括红古区、榆中县、皋兰县、永登县。</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx4.sinaimg.cn/large/008kbRJbly1i20uwz8slzj310p0m50wg.jpg" alt="undergraduate-thesis-lanzhou-administrative-districts-for-functional-diversity.jpg" />
<figcaption>图4 兰州市生活性服务业功能多样性分区统计图<br />Fig.4 Stacked bar chart of administrative districts for functional diversity of consumer services industry in Lanzhou</figcaption>
</figure>

<h3 id="33-不同区域的主导生活性服务业">3.3 不同区域的主导生活性服务业</h3>

<p>通过统计每个单元格中不同生活性服务业的POI个数，计算每类POI占该类全部POI比例，再取占比最大的类别为该单元格的主导生活性服务业，得到图5兰州市主导生活性服务业分析。金融保险服务、商务住宅服务和住宿服务主要集中在兰州市中心城区、兰州新区和榆中县部分片区，而餐饮服务、购物服务和生活服务则相对分散。和图2兰州市生活性服务业核密度分析的结果比较发现，金融保险服务、商务住宅服务和住宿服务高附加值服务业主要集中于核密度较高的区域，而餐饮服务、购物服务和生活服务低附加值服务业分散于核密度较低的区域。</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx2.sinaimg.cn/large/008kbRJbly1i20ux1s20kj323g1wxb29.jpg" alt="undergraduate-thesis-lanzhou-dominant-consumer-services-industry.jpg" />
<figcaption>图5 兰州市主导生活性服务业分析<br />Fig.5 Analysis of dominant consumer services industry in Lanzhou</figcaption>
</figure>

<p>在图5兰州市主导生活性服务业分析基础上结合图3兰州市生活性服务业功能多样性分析，通过统计每类主导生活性服务的格网中不同级别的功能多样性个数占该类服务全部格网数比例，得到图6兰州市生活性服务业功能多样性水平分级统计图。可以发现餐饮服务、购物服务、生活服务多集中在功能多样性较低的区域，而金融保险服务、商务住宅服务和住宿服务主要集中在功能多样性较高的区域。和前面分析的结果保持一致。</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx4.sinaimg.cn/large/008kbRJbly1i20ux02qrdj329z1c0h45.jpg" alt="undergraduate-thesis-lanzhou-different-services-for-functional-diversity.jpg" />
<figcaption>图6 兰州市生活性服务业功能多样性水平分级统计图<br />Fig.6 Stacked bar chart of different services for functional diversity of consumer services industry in Lanzhou</figcaption>
</figure>

<p>综合以上，可发现高附加值服务（金融保险服务、商务住宅服务和住宿服务）主要集中在生活性服务业密度和种类较高的区域，而低附加值的服务（餐饮服务、购物服务、生活服务）则分散在生活性服务业密度和种类较低的区域。</p>

<h2 id="4-结论与讨论">4 结论与讨论</h2>

<p>本文基于兰州市生活性服务业POI数据，采用核密度、熵指数、数值统计方法，研究了兰州市生活性服务业的空间格局特征，主要结论如下：1）兰州市生活性服务业主要集中在城关区、七里河区、安宁区、西固区四区所在的中心城区内，其次是其余各区县（红古区、榆中县、皋兰县、永登县）的政府单位所在地和兰州新区管委会所在地。2）兰州市中心城区生活性服务业核密度呈现“中心——外围”结构，中心四区分别有各自的中心，且中心与行政区政府所在地空间邻近。3）按行政区排名，城关区的生活性服务业种类和密度最高，其次是七里河区、安宁区、西固区，最后是红古区、榆中县、皋兰县、永登县。4）高附加值的服务（金融保险、商务住宅和住宿服务）相对集中在中心城区，低附加值的服务（餐饮、购物、生活服务）则相对分散。</p>

<p>兰州市的生活性服务业空间格局现状与《兰州市国土空间总体规划（2021﹣2035年）》中城镇空间与功能布局、中心城区规划基本一致，符合中长期发展规划。为促进兰州市生活性服务业的进一步发展，提出以下建议：1）加强中心城区多中心组团发展，提升中心城区综合服务能力的同时，注重城关区、七里河区、安宁区、西固区四区协同发展。2）中心城区以外地区合理布局基础设施，适当增加金融保险、商务住宅和住宿服务等高附加值的服务，提高生活性服务业水平。</p>

<p>本研究存在以下不足：生活性服务业种类覆盖不全，只挑选了相对重要的六类开展研究；POI数据只反映位置、数量和类别，缺少营业规模、使用情况等更加具体的数据；时间上，仅研究了2023年兰州市生活性服务业的空间格局，未研究其随时间演变的规律和趋势；空间上，仅研究了兰州市域生活性服务业的空间格局，未对兰州市中心城区进行深入细致的研究。</p>

<h2 id="参考文献">参考文献</h2>

<ol>
  <li>冉钊,周国华,吴佳敏,等.基于POI数据的长沙市生活性服务业空间格局研究[J].世界地理研究,2019,28(03):163-172.</li>
  <li>龙瀛,刘伦伦.新数据环境下定量城市研究的四个变革[J].国际城市规划,2017,32(01):64-73.</li>
  <li>陈洪星,杨德刚,李江月,等.大数据视角下的商业中心和热点区分布特征及其影响因素分析——以乌鲁木齐主城区为例[J].地理科学进展,2020,39(05):738-750.</li>
  <li>王娜,吴健生,彭子凤.基于多源大数据的深圳市生活性服务业空间格局及影响因素研究[J].热带地理,2021,41(05):956-967.DOI:10.13284/j.cnki.rddl.003381.</li>
  <li>张家旗,刘晏男,宋斌玢.基于POI数据的郑州市主城区生活服务业空间分布特征研究[J].世界地理研究,2022,31(02):399-409.</li>
  <li>许学强,周一星,宁越敏.城市地理学（第三版）[Z].高等教育出版社,2022.</li>
  <li>August Lösch. Economics of Location[Z]. Yale University Press,1954.</li>
  <li>Ernest W. Burgess. The Growth of the City: An Introduction to a Research Project[J]. Urban Ecology, Springer,2008.</li>
  <li>François Perroux. Note sur la notion de “pôle de croissance”[J]. Économie appliquée Année,1955,8-1-2,307-320.</li>
  <li>John Friedmann. Regional Development Policy: A Case Study of Venezuela[Z]. The MIT Press,1966.</li>
  <li>Edward Louis Ullman. Geography as spatial interaction[Z]. University of Washington Press,1980.</li>
  <li>Krugman, P. (1991). Increasing Returns and Economic Geography. Journal of Political Economy, 99(3), 483–499.</li>
  <li>Coffey W J， Drolet R， Polese M. The intra-metropolitan location of high order services: Patterns，factors and mobility in Montreal. Papers in Regional Science，1996，75（3）：293-323.</li>
  <li>Prayag G, Landré M and Ryan C. 2012. Restaurant Location in Hamilton, New Zealand: Clustering Patterns from 1996 to 2008. International Journal of Contemporary Hospitality Management, 24(3): 430-450.</li>
  <li>Hans R.A. Koster, Ilias Pasidis, Jos van Ommeren. Shopping externalities and retail concentration: Evidence from dutch shopping streets [J]. Journal of Urban Economics, 2019,11(114): 103-194.</li>
  <li>宁越敏.上海市区商业中心区位的探讨[J].地理学报,1984,(02):163-172.</li>
  <li>吴郁文,谢彬,骆慈广,等.广州市城区零售商业企业区位布局的探讨[J].地理科学,1988,(03):208-217+295.</li>
  <li>杨吾扬.北京市零售商业与服务业中心和网点的过去、现在和未来[J].地理学报,1994,(01):9-17.</li>
  <li>浩飞龙,王士君,冯章献,等.基于POI数据的长春市商业空间格局及行业分布[J].地理研究,2018,37(02):366-378.</li>
  <li>李卫东,张铭龙,段金龙.基于POI数据的南京市空间格局定量研究[J].世界地理研究,2020,29(02):317-326.</li>
  <li>胡泷尹,靳诚.基于POI数据的城市餐饮业空间分布特征及便利性研究——以江苏省南京市为例[J].地理与地理信息科学,2024,40(06):78-86.</li>
  <li>徐冬,黄震方,吕龙,等.基于POI挖掘的城市休闲旅游空间特征研究——以南京为例[J].地理与地理信息科学,2018,34(01):59-64+70+3.</li>
  <li>许昕,赵媛.南京市养老服务设施空间分布格局及可达性评价——基于时间成本的两步移动搜索法[J].现代城市研究,2017,(02):2-11.</li>
  <li>兰州市统计局.国家统计局兰州调查队.兰州统计年鉴2024[Z].中国统计出版社,2024.</li>
</ol>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="others" /><summary type="html"><![CDATA[基于POI数据的兰州市生活性服务业空间格局研究]]></summary></entry><entry><title type="html">L校资源预约系统渗透测试</title><link href="/blog/p/hack-in-lzu-cgyy/" rel="alternate" type="text/html" title="L校资源预约系统渗透测试" /><published>2025-04-26T10:48:00+08:00</published><updated>2025-04-26T10:48:00+08:00</updated><id>/blog/p/hack-in-lzu-cgyy</id><content type="html" xml:base="/blog/p/hack-in-lzu-cgyy/"><![CDATA[<blockquote>
  <p>Kein System ist sicher. （没有绝对安全的系统）</p>
</blockquote>

<p>自笔者上次发现<a href="https://wuhulamb.pages.dev/blog/2024/06/23/first-hack-lzu-library/" target="_blank">L校图书馆毕业纪念网站的安全问题</a>后，很长时间都没有什么新的发现了…… 直到某天，ZZR在L校的APP上发现资源预约系统可以查看所有在校师生的姓名、工号等敏感信息，然后将这一发现分享给了我，于是一个种子播下了.</p>

<h2 id="初次尝试">初次尝试</h2>

<p>我找到了该资源预约系统的网页端，F12 打开开发者工具，找到相关数据的请求包.</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx2.sinaimg.cn/large/008kbRJbly1i0vl8a9m5cj31fj0suwxk.jpg" alt="lzu-cgyy-index.jpg" />
<figcaption>简单测试发现网页数据是该post请求返回的</figcaption>
</figure>

<p>首先是这个post请求的url最后的参数非常奇怪，再点击response会发现不是网页中显示的数据，而是很长的一串字符，request同样是一串很长的字符。笔者非常果断地放弃了……</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx3.sinaimg.cn/large/008kbRJbly1i0vl8ab4i1j31fj0su7m5.jpg" alt="lzu-cgyy-response.jpg" />
<figcaption>奇怪的response</figcaption>
</figure>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx1.sinaimg.cn/large/008kbRJbly1i0vl8ac8oaj31fj0sutqm.jpg" alt="lzu-cgyy-request.jpg" />
<figcaption>奇怪的request</figcaption>
</figure>

<h2 id="two-thousand-years-later-">Two thousand years later …</h2>

<p>某天，WJY说总是预约不上羽毛球场，问我能不能写一个一键预约脚本用于该系统，我说有难度……</p>

<p>回到宿舍，我又打开了那个网站，因为没有思路，然后又默默地❌掉了……</p>

<hr />

<p>前面铺垫这么久，就是想突出一下这次渗透测试的难度嘿嘿。下面开始正文！</p>

<h2 id="存在加密">存在加密</h2>

<p>网页显示的数据一定就是post请求的response，而显示的结果是明文，说明一定存在解密过程，而且一定是在前端解密的（后端解密就没有加密的必要了😅），那一定就可以找到解密部分的代码！</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx3.sinaimg.cn/large/008kbRJbly1i0vl8a11tgj31fg0swqep.jpg" alt="lzu-cgyy-encrypt.jpg" />
<figcaption>搜索encrypt，发现可疑代码</figcaption>
</figure>

<p>笔者在源代码搜索栏中尝试了 <code class="language-plaintext highlighter-rouge">crypto</code> , <code class="language-plaintext highlighter-rouge">encrypt</code> 等关键字，定位加密代码部分。搜不到也可以将代码文件逐个点一遍，关键是要坚信前端一定有解密的代码.</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx2.sinaimg.cn/large/008kbRJbly1i0vl8a88yij31fh0su7lm.jpg" alt="lzu-cgyy-encrypt-function.jpg" />
<figcaption>发现解密代码</figcaption>
</figure>

<p>果然，没花多长时间，笔者就找到了解密的代码，在浏览器控制台运行decodeResult函数，成功解密！</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx2.sinaimg.cn/large/008kbRJbly1i0vl8au702j31fg0su7wi.jpg" alt="lzu-cgyy-decode-response.jpg" />
<figcaption>成功解密post请求的response数据</figcaption>
</figure>

<p>这时候，自然会用这个函数试一下解密requset的数据.</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx3.sinaimg.cn/large/008kbRJbly1i0vl8au0awj31fh0sv7wi.jpg" alt="lzu-cgyy-decode-request.jpg" />
<figcaption>成功解密post请求的request数据</figcaption>
</figure>

<h2 id="post请求的url参数是个什么鬼">post请求的url参数是个什么鬼？</h2>

<p>笔者第一次遇到这么奇怪的url参数，延续上面的想法，起初以为这个参数也是加密后的结果，可是死活找不到加密的代码，按照上面加密过程反向解密也不行，然后就卡在这里了……</p>

<p>不过，post请求是从前端发到后端的，意味着url也是前端生成的，那么一定能在前端找到生成它的代码.</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx1.sinaimg.cn/large/008kbRJbly1i0vl8asixqj31fj0sve81.jpg" alt="lzu-cgyy-stack-trace.jpg" />
<figcaption>post请求的生成堆栈</figcaption>
</figure>

<p>在AI君的帮助下，笔者一点一点读完了这些打包混淆的代码，找到了一个关键的代码片段.</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx4.sinaimg.cn/large/008kbRJbly1i0vl8a8fnuj31fj0swdus.jpg" alt="lzu-cgyy-key-code.jpg" />
<figcaption>发出post请求的关键代码</figcaption>
</figure>

<p>经调试，post请求的url在发出时，没有后面的奇怪参数，且request也没有加密，而且笔者第二天发出相同request请求却得到不同的url参数，于是猜测这个url参数是动态生成的，可能是依据token和cookie生成的。（弄清这个url参数真的是花了很长时间，最后是在控制台构造了一个post请求发出后成功返回了数据才确认了这个请求过程）</p>

<p>（所以实际上post请求的url就是 <code class="language-plaintext highlighter-rouge">https://example.com/hzsun-resm/sys/user/queryUserByConfitionPage</code> ，请求头加上 <code class="language-plaintext highlighter-rouge">X-Access-Token</code> 参数，结合请求头的cookie发出post请求时，浏览器Network显示的url就自动加上了那个奇怪的令牌参数）</p>

<h2 id="爬取数据">爬取数据</h2>

<p>最后就是快乐地爬取数据环节.（当然是用控制台爬取，浏览器控制台自动处理请求头带上cookie真的太方便了）</p>

<p>一开始笔者按照常规爬取思路，准备按页爬取保存，后来发现浏览器每次保存需手动点击确认，就将每页爬取的数据合并再一次保存下来.</p>

<h2 id="学到了什么">学到了什么</h2>

<ul>
  <li>浏览器控制台爬数据不要太爽，javascript值得一学！</li>
  <li>感觉Google Chrome的Console和Debugger比Firefox要正常<del>，也有可能是我误点了什么</del>（同样的post请求构造，Firefox返回400，Chrome正常返回response数据；起先Firefox也是正常返回，后来就一直返回400，我找了好长时间原因，最后在Chrome上发post请求完全正常）</li>
  <li>浏览器Private窗口操作，关闭所有Private窗口后，所有缓存都会被清除</li>
  <li>AI君真是最强搭档，本次渗透的代码有95%均为AI君完成，剩下5%是笔者细致入微的提问和耐心的等待（什么时候deepseek不再出现服务器繁忙啊啊啊）</li>
</ul>

<h2 id="浏览器post请求显示的request为什么是加密的">（❓）浏览器post请求显示的request为什么是加密的</h2>

<p>post请求发出后，前端的request拦截函数做的加密（笔者水平有限，猜测过程是这样的）</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx4.sinaimg.cn/large/008kbRJbly1i0vl8asramj31fh0swb29.jpg" alt="lzu-cgyy-interceptors-stack-trace.jpg" />
<figcaption>post请求生成堆栈中的request拦截函数</figcaption>
</figure>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx1.sinaimg.cn/large/008kbRJbly1i0vl8adimzj31fi0sw7ko.jpg" alt="lzu-cgyy-interceptors.jpg" />
<figcaption>request拦截函数代码</figcaption>
</figure>

<h2 id="附录js代码">（附录）js代码</h2>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">https://example.com/hzsun-resm/sys/user/queryUserByConfitionPage</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">token</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">EXAMPLEopeyJ0e02jfXAiOiJKV1QixxLCJhbGciOiJIUzIpjafds1NiJ9.eyJleHAiOjE3N1lIjoiMzIwMjEw9fjadsOTQ4MjUxIn0.24XCcXb5HZJ1Rrw4YTYC4w1Qrgv3AQ</span><span class="dl">"</span><span class="p">;</span>

<span class="k">async</span> <span class="kd">function</span> <span class="nf">runBrowser</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">total</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span> <span class="c1">// 根据实际情况确认总页数</span>
  <span class="kd">const</span> <span class="nx">batchSize</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
  <span class="kd">const</span> <span class="nx">allData</span> <span class="o">=</span> <span class="p">[];</span> <span class="c1">// 存储所有响应数据</span>

  <span class="k">async</span> <span class="kd">function</span> <span class="nf">sendRequest</span><span class="p">(</span><span class="nx">offset</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">payload</span> <span class="o">=</span> <span class="p">{</span> 
      <span class="dl">"</span><span class="s2">limit</span><span class="dl">"</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">offset</span><span class="dl">"</span><span class="p">:</span> <span class="nx">offset</span><span class="p">,</span>
      <span class="dl">"</span><span class="s2">userIdList</span><span class="dl">"</span><span class="p">:</span> <span class="p">[],</span>
      <span class="dl">"</span><span class="s2">excludeRoleId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span> 
      <span class="dl">"</span><span class="s2">roleId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span> 
      <span class="dl">"</span><span class="s2">orgId</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span> 
      <span class="dl">"</span><span class="s2">realname</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span> 
      <span class="dl">"</span><span class="s2">username</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span> 
      <span class="dl">"</span><span class="s2">userTypeCode</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span>
    <span class="p">};</span>

    <span class="k">try</span> <span class="p">{</span>
      <span class="kd">const</span> <span class="nx">response</span> <span class="o">=</span> <span class="k">await</span> <span class="nf">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="p">{</span> 
        <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
          <span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span><span class="p">,</span>
          <span class="dl">'</span><span class="s1">X-Access-Token</span><span class="dl">'</span><span class="p">:</span> <span class="nx">token</span>
        <span class="p">},</span>
        <span class="na">body</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">payload</span><span class="p">)</span>
      <span class="p">});</span>

      <span class="k">if </span><span class="p">(</span><span class="o">!</span><span class="nx">response</span><span class="p">.</span><span class="nx">ok</span><span class="p">)</span> <span class="k">throw</span> <span class="k">new</span> <span class="nc">Error</span><span class="p">(</span><span class="s2">`HTTP错误! 状态码: </span><span class="p">${</span><span class="nx">response</span><span class="p">.</span><span class="nx">status</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
      
      <span class="kd">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">response</span><span class="p">.</span><span class="nf">json</span><span class="p">();</span>
      <span class="nx">allData</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nf">decodeResult</span><span class="p">(</span><span class="nx">data</span><span class="p">)[</span><span class="dl">'</span><span class="s1">responseResult</span><span class="dl">'</span><span class="p">][</span><span class="dl">'</span><span class="s1">rows</span><span class="dl">'</span><span class="p">]);</span> <span class="c1">// 将响应数据存入数组</span>

    <span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="s2">`Offset </span><span class="p">${</span><span class="nx">offset</span><span class="p">}</span><span class="s2"> 失败:`</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="c1">// 分批发送请求</span>
  <span class="k">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;=</span> <span class="nx">total</span><span class="p">;</span> <span class="nx">i</span> <span class="o">+=</span> <span class="nx">batchSize</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">promises</span> <span class="o">=</span> <span class="p">[];</span>
    <span class="k">for </span><span class="p">(</span><span class="kd">let</span> <span class="nx">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;</span> <span class="nx">batchSize</span> <span class="o">&amp;&amp;</span> <span class="nx">i</span> <span class="o">+</span> <span class="nx">j</span> <span class="o">&lt;=</span> <span class="nx">total</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">promises</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nf">sendRequest</span><span class="p">(</span><span class="nx">i</span> <span class="o">+</span> <span class="nx">j</span><span class="p">));</span>
    <span class="p">}</span>
    <span class="k">await</span> <span class="nb">Promise</span><span class="p">.</span><span class="nf">all</span><span class="p">(</span><span class="nx">promises</span><span class="p">);</span>
    <span class="k">await</span> <span class="k">new</span> <span class="nc">Promise</span><span class="p">(</span><span class="nx">resolve</span> <span class="o">=&gt;</span> <span class="nf">setTimeout</span><span class="p">(</span><span class="nx">resolve</span><span class="p">,</span> <span class="mi">1000</span><span class="p">));</span> <span class="c1">// 批次间隔</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="c1">// 创建并下载合并后的文件</span>
  <span class="kd">const</span> <span class="nx">blob</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Blob</span><span class="p">([</span><span class="nx">JSON</span><span class="p">.</span><span class="nf">stringify</span><span class="p">(</span><span class="nx">allData</span><span class="p">)],</span> <span class="p">{</span> <span class="na">type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span> <span class="p">});</span>
  <span class="kd">const</span> <span class="nx">downloadUrl</span> <span class="o">=</span> <span class="nx">URL</span><span class="p">.</span><span class="nf">createObjectURL</span><span class="p">(</span><span class="nx">blob</span><span class="p">);</span>
  <span class="kd">const</span> <span class="nx">link</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">link</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">downloadUrl</span><span class="p">;</span>
  <span class="nx">link</span><span class="p">.</span><span class="nx">download</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">hack-data.json</span><span class="dl">'</span><span class="p">;</span>
  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nf">appendChild</span><span class="p">(</span><span class="nx">link</span><span class="p">);</span>
  <span class="nx">link</span><span class="p">.</span><span class="nf">click</span><span class="p">();</span>
  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nf">removeChild</span><span class="p">(</span><span class="nx">link</span><span class="p">);</span>
  <span class="nx">URL</span><span class="p">.</span><span class="nf">revokeObjectURL</span><span class="p">(</span><span class="nx">downloadUrl</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// 启动抓取</span>
<span class="nf">runBrowser</span><span class="p">();</span>
</code></pre></div></div>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="计算机" /><summary type="html"><![CDATA[Kein System ist sicher. （没有绝对安全的系统）]]></summary></entry><entry><title type="html">win10虚拟机上安装ArcGIS10.8.2（找资源篇）</title><link href="/blog/p/install-arcgis10.8.2-on-win10-vm/" rel="alternate" type="text/html" title="win10虚拟机上安装ArcGIS10.8.2（找资源篇）" /><published>2025-03-03T20:05:00+08:00</published><updated>2025-03-03T20:05:00+08:00</updated><id>/blog/p/install-arcgis10.8.2-on-win10-vm</id><content type="html" xml:base="/blog/p/install-arcgis10.8.2-on-win10-vm/"><![CDATA[<blockquote>
  <p>前面<a href="/blog/p/install-ubuntu-on-my-laptop-mistakenly/">将Ubuntu误装到笔记本硬盘</a>的影响还在继续…</p>
</blockquote>

<p>为了能够顺利毕业，笔者需要一款像ArcGIS那样的软件，Linux倒是有一个很接近ArcGIS的平替——QGIS。但是啊，最近开始做图的时候笔者发现，QGIS的栅格不支持Jenks自然断裂点分类，这还不是最关键的，最关键的是QGIS的配色和ArcGIS的完全不同，因此习惯了ArcGIS的老师一看到我做的图估计多少有些不适应（笔者也不是很适应），所以思前想后笔者还是决定安装windows虚拟机，再在虚拟机上安装ArcGIS。（ArcGIS只有windows版本）</p>

<p>好消息是VMware Workstation免费了！坏消息是windows镜像及激活方式、ArcGIS软件及激活方式都得自己找（&gt;﹏&lt;）</p>

<p>本文就简单记录一下笔者如何<del>快速</del>（两天）找到并成功安装这些资源的。</p>

<p>首先，由于笔者喜欢看博客，自然会关注几个水平很高的大佬，然后某天又会不满足于博客（大佬<del>更新博客速度普遍较慢</del>不屑于更新博客），于是乎想看看大佬除了博客还在哪些平台比较活跃（没错那天笔者很闲！）按照这样的方法，笔者找到了<a href="https://ibug.io/" target="_blank">ibug</a>大佬的另一个<a href="https://wiki.ibugone.com" target="_blank">基地</a>。这是大佬的个人知识库，信息量很大，笔者一下来了兴趣，开始肆意搜刮。windows镜像就是在<a href="https://wiki.ibugone.com/software/microsoft/" target="_blank">这里</a>找到的。（大佬还是大佬，还很贴心地给出了激活方式 ｡^‿^｡ ）</p>

<p>那么，只剩下ArcGIS了。考验笔者资源搜索的时候到了！</p>

<p>笔者最初使用Google搜索 <code class="language-plaintext highlighter-rouge">arcgis crack download</code> 关键字得到的结果并不理想（有几个极具诱惑性的国外大学链接使笔者以为已经找到了，细看才知道需要学校账号密码）。后来笔者借鉴ibug大佬在windows镜像搜索的方法，使用Google搜索ArcGIS软件包的名称（例如 <code class="language-plaintext highlighter-rouge">ArcGIS_Desktop_1082_180378.exe</code> ），找到了<a href="https://geouitm.uitm.edu.my/sug/software/" target="_blank">ArcGIS的软件包下载地址</a>（没错下载地址还是大学网站，不过可以直接下载）。至于ArcGIS软件包的名字是怎么找到的，就是八仙过海，各显神通了。笔者最初是在YouTube的一个视频中找到的。</p>

<p>最后就是激活方式。ArcGIS10.8.2（非Pro）和ArcGIS Pro的激活方式不同。相对而言，ArcGIS非Pro版激活方式更加成熟，也更容易找到，操作方式似乎也更简单（不需要额外再安装windows的.NET巴拉巴拉）。所以笔者选择ArcGIS10.8.2（似乎是ArcGIS非Pro的最后一个版本）。然后就还是在Google中搜索 <code class="language-plaintext highlighter-rouge">ArcGIS10.8 crack AfCore.dll</code> ，加上 <code class="language-plaintext highlighter-rouge">AfCore.dll</code> 是因为笔者在YouTube的视频中看到了破解过程就是将找来的 <code class="language-plaintext highlighter-rouge">AfCore.dll</code> 替换ArcGIS已安装的 <code class="language-plaintext highlighter-rouge">AfCore.dll</code> 。在一番寻找下笔者又找到了<a href="https://www.bilibili.com/opus/947508143883026435" target="_blank">B站的一个破解ArcGIS10.8.2的视频和文章</a>，最后通过关注公众号获得Crack的 <code class="language-plaintext highlighter-rouge">AfCore.dll</code> 文件。（当然也有ArcGIS的安装包，不过笔者之前已经找到了，就不管了）</p>

<p>搜索能力就像解决问题的能力，并非一天就能锻炼出来，但也不必灰心，笔者以前也缺少这样的能力，在经过一次次难题的磨练下，就逐渐培养出来了。当下各种GPT迅速发展，节约了许多以前使用浏览器搜索再一个个点进去看的时间，利用好这些工具将使我们的学习效率、解决问题的能力有很大的提升，但同时要小心不要过度依赖这些工具，因为它们在简化过程的同时也屏蔽了过程。</p>

<p>最后，附上搜索引擎排序：Google » Bing » <del>Baidu</del></p>

<p>最后的最后，笔者安装的windows虚拟机版本为 <code class="language-plaintext highlighter-rouge">zh-cn_windows_10_enterprise_ltsc_2021_x64_dvd_033b7312.iso</code> （虽然ArcGIS非Pro版可以在win7上跑起来，虽然似乎win7对电脑性能要求更低，虽然有很多人喜欢win7，但是我的朋友，请忍住一时的冲动，相信我，还是安装win10吧）</p>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="计算机" /><summary type="html"><![CDATA[前面将Ubuntu误装到笔记本硬盘的影响还在继续…]]></summary></entry><entry><title type="html">Linux版WPS修补指南</title><link href="/blog/p/small-problems-of-wps-for-linux/" rel="alternate" type="text/html" title="Linux版WPS修补指南" /><published>2025-02-07T15:33:00+08:00</published><updated>2025-02-07T15:33:00+08:00</updated><id>/blog/p/small-problems-of-wps-for-linux</id><content type="html" xml:base="/blog/p/small-problems-of-wps-for-linux/"><![CDATA[<p>自从<a href="/blog/p/install-ubuntu-on-my-laptop-mistakenly/">误把Ubuntu装进电脑硬盘</a>后，笔者开始了神奇的Linux之旅。接着不可避免要寻找office办公三件套的替代软件，笔者最先安装了LibreOffice，打开.docx文档和Word布局不一致，于是又寻找其他替代软件，然后就找到了WPS for Linux。使用WPS打开.docx文件和Word布局一致，且速度很快（比LibreOffice快一点），而且免费无广告！（使用Windows版WPS的家人们，V我50解锁全部功能免广告🤑）</p>

<p>虽然Linux版WPS是Office的最佳平替，但是也会存在一些小问题。本文将列出笔者使用过程中遇到的问题，并给出解决方案（笔者的电脑是x86_64架构，系统为Ubuntu 24.04）</p>

<h2 id="0x00-缺少字体">0x00 缺少字体</h2>

<p>因为存在字体版权问题，所以WPS for Linux并没有附带字体文件，而Ubuntu自带的字体都是用惯了Windows的B从未听说过的开源字体。当B打开老师同学发给ta的文件时，自然会出现显示异常的情况</p>

<p>解决办法详见 👉 <a href="/blog/p/first-day-of-using-ubuntu/">使用Ubuntu的第一天是装…字体？</a></p>

<h2 id="0x01-导出pdf失败">0x01 导出PDF失败</h2>

<p>WPS更新缓慢，PDF导出功能使用的是libtiff.so.5库（Ubuntu 24.04安装的是libtiff.so.6），因为libtiff.so.6向下兼容，所以直接加一个symbolic完事</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo ln -s /usr/lib/x86_64-linux-gnu/libtiff.so.6 /usr/lib/x86_64-linux-gnu/libtiff.so.5
</code></pre></div></div>

<p>参考WPS社区讨论：<a href="https://bbs.wps.cn/topic/7777" target="_blank">Linux环境下不能输出PDF</a></p>

<h2 id="0x02-中文字体加粗显示异常">0x02 中文字体加粗显示异常</h2>

<p>同样是WPS更不上组件库更新，解决办法是下载旧版libfreetype（应该也可以通过降低libfreetype版本解决，不过考虑到可能存在版本兼容依赖问题，且下载的文件是放在WPS自己的路径下，不会影响其他程序运行，笔者选择直接下载）</p>

<p>下载地址： <code class="language-plaintext highlighter-rouge">https://packages.debian.org/bookworm/libfreetype6</code> 。如果是x86_64架构的Debian/Ubuntu系统，下载 <strong>libfreetype6_2.12.1+dfsg-5+deb12u3_amd64.deb</strong></p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ mkdir libfreetype6
$ dpkg-deb -X libfreetype6_2.12.1+dfsg-5+deb12u3_amd64.deb libfreetype6
$ sudo cp libfreetype6/usr/lib/x86_64-linux-gnu/libfreetype.so.6.18.3 /opt/kingsoft/wps-office/office6/
$ sudo ln -s /opt/kingsoft/wps-office/office6/libfreetype.so.6.18.3 /opt/kingsoft/wps-office/office6/libfreetype.so.6
</code></pre></div></div>

<p>参考WPS社区讨论：<a href="https://bbs.wps.cn/topic/3137" target="_blank">WPS for Linux字体加粗问题</a></p>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="计算机" /><category term="Ubuntu折腾小记" /><summary type="html"><![CDATA[自从误把Ubuntu装进电脑硬盘后，笔者开始了神奇的Linux之旅。接着不可避免要寻找office办公三件套的替代软件，笔者最先安装了LibreOffice，打开.docx文档和Word布局不一致，于是又寻找其他替代软件，然后就找到了WPS for Linux。使用WPS打开.docx文件和Word布局一致，且速度很快（比LibreOffice快一点），而且免费无广告！（使用Windows版WPS的家人们，V我50解锁全部功能免广告🤑）]]></summary></entry><entry><title type="html">Linux使用指定字体显示汉字</title><link href="/blog/p/make-chinese-display-with-specified-font-in-linux/" rel="alternate" type="text/html" title="Linux使用指定字体显示汉字" /><published>2025-01-31T22:19:00+08:00</published><updated>2025-01-31T22:19:00+08:00</updated><id>/blog/p/make-chinese-display-with-specified-font-in-linux</id><content type="html" xml:base="/blog/p/make-chinese-display-with-specified-font-in-linux/"><![CDATA[<h2 id="正文">正文</h2>

<p>今天在知乎上刷到<a href="https://www.zhihu.com/question/32058777/answer/3561707776" target="_blank">一篇介绍字体的文章</a>，于是忍不住想解决一下Ubuntu系统中文字体显示异样的问题。</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx1.sinaimg.cn/large/008kbRJbgy1hy7f3qfc14j30th0gstbc.jpg" alt="chinese-display-with-default-font.jpg" />
<figcaption>系统默认字体显示中文有异样</figcaption>
</figure>

<p><code class="language-plaintext highlighter-rouge">/etc/fonts/fonts.conf</code> 配置文件中可以找到 <code class="language-plaintext highlighter-rouge">mono</code> , <code class="language-plaintext highlighter-rouge">sans</code> , <code class="language-plaintext highlighter-rouge">system-ui</code> 情境，结合 <code class="language-plaintext highlighter-rouge">fc-match</code> 命令可以查看对应情境使用的默认字体</p>

<figure>
<img src="https://image.baidu.com/search/down?url=https://wx4.sinaimg.cn/large/008kbRJbgy1hy7f3qf4xyj30r704pgn2.jpg" alt="ubuntu-default-sans.jpg" />
<figcaption>Ubuntu系统默认使用Noto Sans Regular作为非衬线字体</figcaption>
</figure>

<p>直接替换Noto Sans Regular会破坏原生应用的布局显示，而我只是想在显示中文的时候使用自己定义的字体（Microsoft YaHei，Windows用的还是太多了），所以最后解决办法是创建 <code class="language-plaintext highlighter-rouge">~/.config/fontconfig/fonts.conf</code> 文件。下面是文件内容：</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE fontconfig SYSTEM "fonts.dtd"&gt;
&lt;fontconfig&gt;
    &lt;!-- 设置微软雅黑为回退字体 --&gt;
    &lt;match&gt;
        &lt;test name="family"&gt;
            &lt;string&gt;sans-serif&lt;/string&gt;
        &lt;/test&gt;
        &lt;edit name="family" mode="append" binding="strong"&gt;
            &lt;string&gt;Microsoft YaHei&lt;/string&gt;
        &lt;/edit&gt;
    &lt;/match&gt;
&lt;/fontconfig&gt;
</code></pre></div></div>

<h2 id="彩蛋">彩蛋</h2>

<p><code class="language-plaintext highlighter-rouge">gsettings</code> 是GNOME的配置程序，使用它可以<del>方便</del>地配置和GNOME相关的所有东西，当然也可以配置字体：</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gsettings get org.gnome.desktop.interface font-name    # 查看桌面字体
gsettings set org.gnome.desktop.interface font-name 'Microsoft YaHei 11'  # 设置桌面字体为微软雅黑 11号字体
gsettings reset org.gnome.desktop.interface font-name  # 重置回原来的字体
</code></pre></div></div>

<p>更多用法参见 <code class="language-plaintext highlighter-rouge">man gsettings</code></p>

<p>然而其实 <code class="language-plaintext highlighter-rouge">gsettings</code> 配置的字体只是GNOME程序的界面，相较之下上文使用fontconfig配置文件的方法更加彻底，所有使用fontconfig的程序都会遵守该配置文件</p>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="计算机" /><category term="Ubuntu折腾小记" /><summary type="html"><![CDATA[正文]]></summary></entry><entry><title type="html">ROCKY</title><link href="/blog/p/rocky/" rel="alternate" type="text/html" title="ROCKY" /><published>2025-01-24T09:32:00+08:00</published><updated>2025-01-24T09:32:00+08:00</updated><id>/blog/p/rocky</id><content type="html" xml:base="/blog/p/rocky/"><![CDATA[<p>洛奇是一个拳击手，我没有看过他的比赛，但我看过他的电影。我很喜欢这个家伙。</p>

<p><em>ROCKY</em> 一共有六部电影，很受大家喜欢。我只看了前四部，感觉都挺不错的。推荐观看前两部，前两部比较经典。</p>

<p>其实像这种励志电影，大家在看之前就大概知道情节了。 <em>ROCKY</em> 的这几部电影的故事情节设定都是类似的，可是也不妨碍我们去看，毕竟看励志电影也不是为了看情节对吧。（我是 <em>ROCKY</em> 主题曲 <a href="https://www.bilibili.com/video/BV11a411c7jN/" target="_blank"><i>Gonna Fly Now</i></a> 带入的）</p>

<p><em>ROCKY</em> 除了拼搏的 <strong>HARD</strong> ，还有一个细节很真实。当洛奇下定决心迎接挑战参加比赛，他每天凌晨四点起床，喝下五个生鸡蛋，然后出门跑步，而当他跑到了费城最高的地方（费城艺术博物馆）时，他会像个孩子一样开心地跳起来，他会大喊： <strong>I made it! I made it!</strong></p>

<p>洛奇和我们一样，都有难以坚持下去的时候，也许那句在别人眼中不算什么的 <strong>I made it!</strong> 却正是他继续前进的支持。（对了，洛奇在大喊 I made it! 前还会先喊一声 <strong>Adrian!</strong> [手动狗头]）</p>

<p>再过两天就要过年了，提前祝大家新年快乐！</p>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="others" /><summary type="html"><![CDATA[洛奇是一个拳击手，我没有看过他的比赛，但我看过他的电影。我很喜欢这个家伙。]]></summary></entry><entry><title type="html">ln创建链接请使用绝对路径！！！</title><link href="/blog/p/better-use-absolute-path-when-creating-links/" rel="alternate" type="text/html" title="ln创建链接请使用绝对路径！！！" /><published>2025-01-17T12:08:00+08:00</published><updated>2025-01-17T12:08:00+08:00</updated><id>/blog/p/better-use-absolute-path-when-creating-links</id><content type="html" xml:base="/blog/p/better-use-absolute-path-when-creating-links/"><![CDATA[<p>链接是个好东西，可以把原文件link到一个链接上，通过链接可以读取原文件，也可以修改原文件。链接可以同步原文件的改动，即链接和原文件内容始终相同。以上的功能不区分软链接还是硬链接，是链接的基本属性。</p>

<h2 id="硬链接">硬链接</h2>

<p>硬链接创建后，像是copy了原文件，地位和原文件相同，原文件被删除链接文件依然有内容，不同于copy的地方是硬链接是一个指向原文件在磁盘中地址的索引（即硬链接占用的磁盘空间是作为链接的空间，不是文件的空间）</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ln /absolute/path/to/target /absolute/path/to/link
</code></pre></div></div>

<figure>
<figcaption>target是原文件，link是要创建的链接文件</figcaption>
</figure>

<p>创建完链接，可以使用 <code class="language-plaintext highlighter-rouge">ls -l</code> 命令查看，如果正确创建（使用 <code class="language-plaintext highlighter-rouge">vim</code> 打开链接，如果是空白则创建失败），会看到链接文件大小和原文件大小相同（ls查看的是数据在磁盘的大小，原文件和硬链接都是一个指向磁盘数据的索引）</p>

<h2 id="软链接">软链接</h2>

<p>软链接像是windows桌面的快捷方式，作用是指向原文件，原文件被删除则链接文件失效。（与硬链接的区别是，软链接不指向磁盘中的数据，而是指向原文件）</p>

<blockquote>
  <p>Linux 中 file 是一个指向磁盘数据的索引， <code class="language-plaintext highlighter-rouge">rm file</code> 实际上只是删除了索引，并没有真正清空磁盘中的数据，所以才会有使用xx软件恢复误删数据的可能.</p>
</blockquote>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ln -s /absolute/path/to/target /absolute/path/to/link
</code></pre></div></div>

<figure>
<figcaption>target是原文件，link是要创建的链接文件</figcaption> 
</figure>

<p>软链接的大小很小，同样可以用上述方法查看</p>

<h2 id="请使用绝对路径创建链接">请使用绝对路径创建链接</h2>

<p>如果 <code class="language-plaintext highlighter-rouge">ln</code> 命令创建链接失败了，那么请使用<strong>绝对路径</strong>吧🙃！（如果是权限问题，加上 <code class="language-plaintext highlighter-rouge">sudo</code> ）</p>

<h2 id="（附）pwn.college关于硬链接与软链接的解释"><a href="https://pwn.college/linux-luminarium/commands/#challenges-header-12" target="_blank">（附）pwn.college关于硬链接与软链接的解释</a></h2>

<p>Links come in two flavors: <em>hard</em> and <em>soft</em> (also known as <em>symbolic</em>) links. We’ll differentiate the two with an analogy:</p>

<ul>
  <li>A <strong>hard</strong> link is when you address your appartment using multiple addresses that all lead directly to the same place (e.g., Apt 2 vs Unit 2).</li>
  <li>A <strong>soft</strong> link is when you move appartments and have the postal service automatically forward your mail from your old place to your new place.</li>
</ul>

<p>In a filesystem, a file is, conceptually, an address at which the contents of that file live. A hard link is an alternate address that indexes that data — accesses to the hard link and accesses to the original file are completely identical, in that they immediate yield the necessary data. A soft/symbolic link, instead, contains the original file name. When you access the symbolic link, Linux will realize that it is a symbolic link, read the original file name, and then (typically) automatically access that file. In most cases, both situations result in accessing the original data, but the mechanisms are different.</p>

<p>Hard links sound simpler to most people (case in point, I explained it in one sentence above, versus two for soft links), but they have various downsides and implementation gotchas that make soft/symbolic links, by far, the more popular alternative.</p>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="计算机" /><summary type="html"><![CDATA[链接是个好东西，可以把原文件link到一个链接上，通过链接可以读取原文件，也可以修改原文件。链接可以同步原文件的改动，即链接和原文件内容始终相同。以上的功能不区分软链接还是硬链接，是链接的基本属性。]]></summary></entry><entry><title type="html">使用Ubuntu的第一天是装…字体？</title><link href="/blog/p/first-day-of-using-ubuntu/" rel="alternate" type="text/html" title="使用Ubuntu的第一天是装…字体？" /><published>2025-01-14T21:12:00+08:00</published><updated>2025-01-14T21:12:00+08:00</updated><id>/blog/p/first-day-of-using-ubuntu</id><content type="html" xml:base="/blog/p/first-day-of-using-ubuntu/"><![CDATA[<p>今天是使用Ubuntu的第一天，安装了很多东西，但花了最多时间去<del>找</del>安装的是字体？！</p>

<p>Ubuntu上已经预安装了许多开源字体（以<a href="https://en.wikipedia.org/wiki/Noto_fonts" target="_blank">Noto</a>为最多），但是当下载完WPS打开前段时间做的PPT时，看到了一大片豆腐块状东西…（而且打开WPS的时候报错了！</p>

<p>（可以使用 <code class="language-plaintext highlighter-rouge">fc-list</code> 命令查看已经安装的字体文件，也可以在Ubuntu的搜索界面搜 Fonts ，用图形界面查看）</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fc-list | less
</code></pre></div></div>

<h2 id="下载">下载</h2>

<p>然后我就在互联网上四处奔波找字体文件，在GitHub上找到了<a href="https://github.com/dv-anomaly/ttf-wps-fonts" target="_blank">ttf-wps-fonts</a>和<a href="https://github.com/adobe-fonts" target="_blank">Adobe Fonts</a>，<del><a href="https://packages.debian.org/sid/fonts/ttf-mscorefonts-installer" target="_blank">微软的英文字体包 ttf-mscorefonts-installer</a>可以使用apt安装</del>（ <code class="language-plaintext highlighter-rouge">ttf-mscorefonts-installer</code> 这个包很长时间没有更新了，遇到缺少的字体还是直接Google吧）</p>

<p>微软的中文字体没有找到打包好的，就得自己去网上一个一个搜了（不过也可以找一台windows薅下来</p>

<p>（1月15日：又在Github上找到了一个<a href="https://github.com/zyh1102/fonts" target="_blank">有很多商业字体文件的仓库</a>，里面有方正粗黑宋简体[FZCHSJW.TTF]）</p>

<h2 id="安装">安装</h2>

<p>使用 <code class="language-plaintext highlighter-rouge">apt install</code> 的字体文件就不用管啦，后面刷新一下就可以了，下面主要针对自己下载的字体文件，介绍如何安装。</p>

<p>fontconfig会扫描特定目录，检查字体，如（ <code class="language-plaintext highlighter-rouge">/usr/share/fonts/</code> 和 <code class="language-plaintext highlighter-rouge">/home/user/.fonts/</code> 等，可以使用下面的命令查看有哪些目录：</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fc-cache -v | less
</code></pre></div></div>

<p>这些目录都可以放字体文件，或者放子目录。我是把零散下载的字体文件放在了 <code class="language-plaintext highlighter-rouge">/home/user/.fonts/</code> 这里，把 ttf-wps-fonts 放到了 <code class="language-plaintext highlighter-rouge">/usr/share/fonts/wps-office/</code> 这里（新建了 wps-office 文件夹）</p>

<p><code class="language-plaintext highlighter-rouge">/home/user/.fonts/</code> 只能user用户使用， <code class="language-plaintext highlighter-rouge">/usr/share/fonts/wps-office/</code> 为系统所有用户可用（不过作为个人PC的单用户使用似乎影响不大？）</p>

<h2 id="刷新缓存">刷新缓存</h2>

<p>刷新缓存后就可以在 <code class="language-plaintext highlighter-rouge">fc-list</code> 中找到下载的字体了。</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fc-cache -fv  # -f选项强制重新生成最新的缓存文件；-v选项是显示任务进度
</code></pre></div></div>]]></content><author><name>wuhulamb</name><email>wuhulamb@163.com</email></author><category term="计算机" /><category term="Ubuntu折腾小记" /><summary type="html"><![CDATA[今天是使用Ubuntu的第一天，安装了很多东西，但花了最多时间去找安装的是字体？！]]></summary></entry></feed>